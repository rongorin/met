 
@model IEnumerable<MetopeMVCApp.Models.SecurityAttributionIndexViewModel>

@using GridMvc.Html
@{
    ViewBag.Title = "Security Attribution";
    //List<string> _sizes = new List<string>() { "10", "20", "50", "100" };
}
@section Styles {
    @Styles.Render("~/Content/GridMvc")
    <link href="~/Content/cssNoLines.css" rel="stylesheet" />
    @*@Styles.Render("~/Content/datetime")*@
}

<h2>
    Security Attribution
    @if (ViewBag.PortfolioCode != null)
    {
        @: for @ViewBag.PortfolioCode
    }
</h2>
<p>
    @Html.ActionLink("Create New", "Create", new { PortfolioCode = ViewBag.Portfolio }, null)
</p> 
@Html.Partial("_MsgSuccesFail", Model)

  
<div class="code-cut">
    @Html.Grid(Model).Named("depGrid").Columns(columns =>
    {
             
        columns.Add(c => c.Ticker)
            .Titled("Ticker").Filterable(true)
            .SetWidth(90);

        //columns.Add().Encoded(false).Sanitized(false).SetWidth(10).RenderValueAs(o => Html.CheckBox("checked", false));
        columns.Add(c => c.Security_ID, true);

        columns.Add(c => c.Excess_Weight_Quarterly).Titled("Excess Weight Quarterly").Css("text-right").Filterable(false)
            .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0.00##}</span>", x.Excess_Weight_Quarterly)).Encoded(false)
            .Sanitized(false)
            .SetWidth(120);

        columns.Add(c => c.Relative_Contribution_Quarterly)
            .Titled("Relative Contribution Quarterly")
            .Css("text-right").Filterable(false)
            .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0.00##}</span>", x.Relative_Contribution_Quarterly)).Encoded(false)
            .Sanitized(false)
            .SetWidth(120);

        columns.Add(c => c.Security_Weight_Portfolio_Monthly)
            .Titled("Security Weight Portfolio Monthly")
            .Css("text-right").Filterable(false)
            .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0.00##}</span>", x.Security_Weight_Portfolio_Monthly)).Encoded(false)
            .Sanitized(false)
            .SetWidth(120);

        columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(50)
        .RenderValueAs(c => @<u>
            @Html.ActionLink("Edit", "Edit", "SecurityAttribution", new { SecurityId = c.Security_ID, PortfolioCode = c.Portfolio_Code }, null)
        </u>);
        columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(50)
        .RenderValueAs(c => @<u>
            @Html.ActionLink("Delete", "Delete", "SecurityAttribution", new { SecurityId = c.Security_ID, PortfolioCode = c.Portfolio_Code }, null)
        </u>);

        columns.Add().Encoded(false).Sanitized(false)
                .RenderValueAs(c => @<a href="@Url.Action("Index", "SecurityAttributionHistory", new { PortfolioCode = c.Portfolio_Code, SecurityId = c.Security_ID })">
                <span class="badge">History</span>
            </a>).SetWidth(80);
    }).WithPaging(50).Sortable(true)

</div>

<br />
@Html.ActionLink("Go To Portfolios List", "Index", "Portfolio", new { }, null)

@section Scripts { @Scripts.Render("~/bundles/datetime")
@Scripts.Render("~/bundles/GridMvc")
<script>
        var detailsUrl = '@Url.Action("Edit", "SecurityAttribution")';
        $(function () {
            pageGrids.depGrid.onRowSelect(function (e) {
                var personId = e.row.Security_ID;
        });
    });
</script>

}








