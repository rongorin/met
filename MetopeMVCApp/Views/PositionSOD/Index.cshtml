@model IEnumerable<MetopeMVCApp.Models.PositionsSODIndexViewModel>
 
@using GridMvc.Html
@{
    ViewBag.Title = "Index";@ViewBag.Nav
    List<string> _sizes = new List<string>() { "10", "20", "50", "100" };

    ViewBag.RowsPgSelected = ((SelectList)ViewBag.RowsPerPage).SelectedValue ?? _sizes[3];
}
@section Styles {
    @Styles.Render("~/Content/GridMvc")
    <link href="~/Content/cssNoLines.css" rel="stylesheet" />
    <link href="~/Content/myButtons.css" rel="stylesheet" />
}
@helper CustomRenderingOfColumn(Metope.DAL.Position_SOD ps)
{
    if (ps.Long_Short_Indicator == "S")
    {
        <text>Short</text>
    }
    else
    {
        <text>Long</text>
    }
}
  @*<div class="panel-heading">
    <div class="row">
        <div class="col-xs-12">
            <div class="pull-right">
                <button type="button"
                        class="btn btn-primary"
                        ng-click="vm.saveClick(creditCardForm)">
                    <i class="glyphicon glyphicon-floppy-disk"></i>
                    &nbsp;Save
                </button>
                <a class="btn btn-primary"
                   formnovalidate="formnovalidate"
                   href="#/">
                    <i class="glyphicon glyphicon-remove-circle"></i>
                    &nbsp;Cancel
                </a>
            </div>
        </div>
    </div>
</div>*@

<div id="mainList"> 
        <div class="row">
            <div class="col-md-7 ">
                <h2>Positions for <b>@ViewBag.Portfolio </b>
                    @if (ViewBag.UserInputDate != null)  {
                        @:  (for date @ViewBag.UserInputdate) 
                        }  
                </h2>  
            </div> 
        </div>
          @using (Html.BeginForm(null, null, new { PortfolioCode = ViewBag.Portfolio }, FormMethod.Post, new { @class = "form-horizontal" }))
          {
            <div class="row">
                <div class="col-md-2">
                    @Html.ActionLink("Create New", "Create", new { PortfolioCode = ViewBag.Portfolio }, null) 
                </div>
            
                <div class='col-md-2'>
                    <div class="form-group">
                        <div class='input-group date  datetimepickerClass' id='datetimepicker'>
                            <input type='text' id="inputDate" class="form-control" name="inputDate" placeholder="For Date" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div> 
                    </div>
                </div>
                <div class="col-md-2">
                    <button class="btn btn-primary btn-sm control-label" name="submit" type="submit">Submit</button> 
                    <button class="btn btn-default btn-sm control-label" id="reset-date" type="submit">Reset</button> 
                </div>
            </div>  
      }
    @Html.Partial("_MsgSuccesFail", Model)
    <div class="code-cut">
        @Html.Grid(Model).Named("PositionSODGrd").Columns(columns =>
   {

        columns.Add(c => c.Ticker)
               .Titled("Ticker").Filterable(true);
        columns.Add(c => c.Long_Short_Indicator)
               .Titled("Long/Short").Filterable(false).SetWidth(60);


        columns.Add(c => c.Security_ID, true);//hides column, but use this in js
        columns.Add(c => c.Entity_ID, true);
        columns.Add(c => c.Portfolio_Code, true);

        columns.Add(c => c.Position_Date).Titled("Position Date").Format("{0:d MMM yyyy}").SetWidth(230).Sortable(true).Filterable(true);


        columns.Add(c => c.Dealt_Quantity).Titled("Dealt Quantity").Css("text-right").Filterable(false)
                .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0,0}</span>", x.Dealt_Quantity)).Encoded(false)
                .Sanitized(false)
                ;

        columns.Add(c => c.Dealt_AllIn_Mkt_Value_BaseCur).Titled("Dealt AllIn Market BaseCurr").Css("text-right").Filterable(false)
                .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0,0.00}</span>", x.Dealt_AllIn_Mkt_Value_BaseCur)).Encoded(false)
                .Sanitized(false)
               ;
        columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .SetWidth(60)
                .RenderValueAs(c => @<u>
                    @Html.ActionLink("Edit", "Edit", "PositionSOD", new { SecurityId = c.Security_ID, EntityId = c.Entity_ID, PortfolioCode = c.Portfolio_Code, PosDate = c.Position_Date, LongShortInd = c.Long_Short_Indicator, Nav = @ViewBag.Nav }, null)
                </u>);

        columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .SetWidth(80)
                .RenderValueAs(c => @<u>
                    @Html.ActionLink("Delete", "Delete", "PositionSOD", new { SecurityId = c.Security_ID, EntityId = c.Entity_ID, PortfolioCode = c.Portfolio_Code, PosDate = c.Position_Date, LongShortInd = c.Long_Short_Indicator, Nav = @ViewBag.Nav }, null)
                </u>);

    }).WithPaging(Convert.ToInt16(ViewBag.RowsPgSelected)).Sortable(true)
    </div> 
</div>  
@section Scripts {
    @Scripts.Render("~/bundles/GridMvc")
    @Scripts.Render("~/bundles/datetime")
    <script>
        $(function () {
            pageGrids.PositionSODGrd.onRowSelect(function (e) {
                //here rather do full page load instead of the Ajax partial:
                // var myNav = "@ViewBag.Nav";
                if ("@ViewBag.Nav" != "")
                    myUrl2 = mtpApp.Urls.baseUrl + "PositionSOD/Edit?SecurityId=" + e.row.Security_ID + "&EntityId=" + e.row.Entity_ID + "&PortfolioCode=" + e.row.Portfolio_Code + "&PosDate=" + e.row.Position_Date + "&LongShortInd=" + e.row.Long_Short_Indicator + "&Nav=" + "@ViewBag.Nav";
                else
                    myUrl2 = mtpApp.Urls.baseUrl + "PositionSOD/Edit?SecurityId=" + e.row.Security_ID + "&EntityId=" + e.row.Entity_ID + "&PortfolioCode=" + e.row.Portfolio_Code + "&PosDate=" + e.row.Position_Date + "&LongShortInd=" + e.row.Long_Short_Indicator;

                window.location = myUrl2;
            });
            //not using this Ajax call anymore, rather server call to keep all consistent

        });
        $("#reset-date").click(function (evt) {
            evt.preventDefault();
            $('#inputDate').val("").datepicker("update");
        })

    </script> 
}
