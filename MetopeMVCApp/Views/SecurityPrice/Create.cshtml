@model MetopeMVCApp.Models.Security_Price

@{
    ViewBag.Title = "Create";
}
@section Styles {
    @Styles.Render("~/Content/datetime")
}
 
<h3>Create a Security Price</h3>  

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal"> 
        <hr />   
        @Html.ValidationSummary(false)
        @Html.ValidationMessage("Error")

        <div class="form-group">
            <div class="col-md-11 col-lg-offset-1">
                @Html.EditorFor(model => model.Record_Date, "BootstrapEditDate") 
            </div>
            </div>
         

            <div class="form-group">
                @Html.LabelFor(model => model.Security_ID,   htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @*@Html.DropDownList("Security_ID", null, htmlAttributes: ViewBag.SecurityID != null ? new { @disabled = "disabled", @class = "form-control" } as object : new { @class = "form-control" } as object)*@
                    @Html.DropDownList("Security_ID", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Security_ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price_Curr,  htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownList("Price_Curr", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Price_Curr, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.All_In_Price, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.All_In_Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.All_In_Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Clean_Price, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Clean_Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Clean_Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Accrued_Income_Price, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Accrued_Income_Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Accrued_Income_Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price_Source, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Price_Source, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price_Source, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Yield_To_Maturity, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Yield_To_Maturity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Yield_To_Maturity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Discount_Rate, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Discount_Rate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Discount_Rate, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Issued_Amount, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Issued_Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Issued_Amount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Free_Float_Issued_Amount, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Free_Float_Issued_Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Free_Float_Issued_Amount, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-3 col-md-9">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts { 
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datetime")
    
}
 