@model IEnumerable<Metope.DAL.Party_Financials>
@using GridMvc.Html
@{
    ViewBag.Title = "EditPartyFinancials";
    List<string> _sizes = new List<string>() { "10", "20", "50", "100" };
}

@section Styles {
    @Styles.Render("~/Content/GridMvc")
    @Styles.Render("~/Content/datetime")
    <link href="~/Content/cssNoLines.css" rel="stylesheet" />
}
@helper CustomRenderingOfColumn(Metope.DAL.Party_Financials pf)
{
    if (pf.Actual_Forecast_Indicator == "A")
    {
        <text>Actual</text>
    }
    else
    {
        <text>Forecasted</text>
    }
}  
<h2>
    Party Financials
    @if (ViewBag.PartyCode != null)
    {
        @: (for party code @ViewBag.PartyCode  )
    }
</h2> 
<p>
    @Html.ActionLink("Create New", "Create", new { Nav = @ViewBag.Nav }, null)
</p>  
@Html.Partial("_MsgSuccesFail", Model)

<div class="code-cut">
    @Html.Grid(Model).Named("pfGrid").Columns(columns =>
    {
        columns.Add(c => c.Party_Code)
            .Titled("Party").Filterable(true)
            .SetWidth(100);
         
        //show the Indicator Type:
        columns.Add()
            .RenderValueAs(o => CustomRenderingOfColumn(o))
            .Titled("Type")
            .SetWidth(220);
        
         //hides column, but use this in js:
        columns.Add(c => c.Actual_Forecast_Indicator, true);
        columns.Add(c => c.Entity_ID, true);

        columns.Add(c => c.Financials_Date).Titled("Financials Date").Filterable(true).SetWidth(150).Format("{0:dd MMM yyyy}");
      
        columns.Add(c => c.Property_Portfolio_Value).Titled("Property Portfolio Value").Css("text-right").Filterable(false)
        .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0,0.00}</span>", x.Property_Portfolio_Value)).Encoded(false)
        .Sanitized(false)
        .SetWidth(240); 

        columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(50)
        .RenderValueAs(c => @<u>
            @Html.ActionLink("Edit", "Edit", "PartyFinancials", new { EntityId = c.Entity_ID, PartyCode = c.Party_Code, ActualForecastInd = c.Actual_Forecast_Indicator, Nav = @ViewBag.Nav }, null)
        </u>);
        columns.Add()
     .Encoded(false)
     .Sanitized(false)
     .SetWidth(50)
     .RenderValueAs(c => @<u>
        @Html.ActionLink("Delete", "Delete", "PartyFinancials", new { EntityId = c.Entity_ID, PartyCode = c.Party_Code, ActualForecastInd = c.Actual_Forecast_Indicator, Nav = @ViewBag.Nav }, null)
    </u>);
        columns.Add().Encoded(false).Sanitized(false).SetWidth(60)
            .RenderValueAs(c => @<a href="@Url.Action("Index", "PartyFinancialsHistory", new { EntityId = c.Entity_ID, PartyCode = c.Party_Code, ActualForecastInd = c.Actual_Forecast_Indicator })">
            <span class="badge"> Financials History </span>
        </a>);
    }).WithPaging(15).Sortable(true) 
</div>
<div>
    @if (ViewBag.PartyCode != null)
    {
        <br />@Html.ActionLink("Back to Parties", "Index", "Party") 
    }
</div>

@section Scripts { @Scripts.Render("~/bundles/datetime")
@Scripts.Render("~/bundles/GridMvc") 
<script>
    $(function () {
        pageGrids.pfGrid.onRowSelect(function (e) {
            //here rather do full page load instead of the Ajax partial:
            if ( "@ViewBag.Nav" != "")
                myUrl2 = mtpApp.Urls.baseUrl + "PartyFinancials/Edit?PartyCode="+e.row.Party_Code + "&ActualForecastInd="+ e.row.Actual_Forecast_Indicator  + "&EntityId="+ e.row.Entity_ID  + "&Nav="+  "@ViewBag.Nav";
            else
                myUrl2 = mtpApp.Urls.baseUrl + "PartyFinancials/Edit?PartyCode=" + e.row.Party_Code + "&ActualForecastInd=" + e.row.Actual_Forecast_Indicator + "&EntityId=" + e.row.Entity_ID ;
             
            window.location = myUrl2;
        });
        //not using this Ajax call anymore, rather server call to keep all consistent
        $( "#createNew" ).click(function() {
            event.preventDefault(); // To prevent following the link (optional)
            var myUrl = '@Url.Action("Create", "Party")';

            $.ajax({
                method: 'GET',
                url: myUrl,
                data: {},
                success: function (data) {
                    $('#order-content').html(data);
                },
                dataType: 'html',
                error: function (request, error) {
                    alert(request.status);
                    if (request.status == 522) window.location.href = request.statusText;
                },
                async:true
            });
        });
    });
</script>

}