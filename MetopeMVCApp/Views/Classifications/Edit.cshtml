@model Metope.DAL.Classification 
 
@using GridMvc.Html
@{
    ViewBag.Title = "Security Attribution";
    //List<string> _sizes = new List<string>() { "10", "20", "50", "100" };
}
@section Styles {
    @Styles.Render("~/Content/GridMvc")
    <link href="~/Content/cssNoLines.css" rel="stylesheet" />
    @*@Styles.Render("~/Content/datetime")*@
}
 
<h2>
    Classification: <b> @Model.Classification_Code </b>
</h2> 
 <hr />
@{
    ViewBag.Title = "Edit";
}
 
@Html.Partial("_MsgSuccesFail", Model)

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
         
        <h3>Edit Classification code @Model.Classification_Code  </h3>
         
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Classification_Code)
        @Html.HiddenFor(model => model.Entity_ID) 

         @Html.EditorFor(model => model.Description, "BootstrapEditorVertic", new { setLength = "extraLong" }) 
        @Html.EditorFor(model => model.System_Locked, "BooleanVertic")

        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
   
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<hr/>
<h3>Classification Industries listing</h3>
  
<p>
 
    @Html.ActionLink("Create New", "Create", "ClassificationIndustry", new { ClassificationCode = Model.Classification_Code  }, null)
</p>

<div class="code-cut">
    @Html.Grid(Model.Classification_Industry).Named("depGrid").Columns(columns =>
    {
        columns.Add(c => c.Industry_Code)
            .Titled("Industry Code").Filterable(true)
            .SetWidth(90);

        columns.Add(c => c.Classification_Code)
            .Titled("Classification Code").Filterable(false)
            .SetWidth(90);

        columns.Add(c => c.Description)
            .Titled("Description").Filterable(true)
            .SetWidth(250);
        
        //columns.Add().Encoded(false).Sanitized(false).SetWidth(10).RenderValueAs(o => Html.CheckBox("checked", false));
        columns.Add(c => c.Entity_ID, true);
          
        columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(50)
        .RenderValueAs(c => @<u>
              @Html.ActionLink("Edit", "Edit", "ClassificationIndustry", new { ClassificationCode = c.Classification_Code, IndustryCode = c.Industry_Code }, null) 
 
        </u>);
        columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(50)
        .RenderValueAs(c => @<u> 
             @Html.ActionLink("Delete", "Delete", "ClassificationIndustry", new { ClassificationCode = c.Classification_Code, IndustryCode = c.Industry_Code }, null)
        </u>);
         
    }).WithPaging(50).Sortable(true)
  
</div>
<br />
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
