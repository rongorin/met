@model IEnumerable<MetopeMVCApp.Models.SecurityAnalyticsIndexViewModel>
@using GridMvc.Html
@{
    ViewBag.Title = "Index";@ViewBag.Nav
    List<string> _sizes = new List<string>() { "10", "20", "50", "100" }; 

    ViewBag.RowsPgSelected = ((SelectList)ViewBag.RowsPerPage).SelectedValue ?? _sizes[1];
}
@section Styles {
    @Styles.Render("~/Content/GridMvc") 
    <link href="~/Content/cssNoLines.css" rel="stylesheet" />
    <link href="~/Content/myButtons.css" rel="stylesheet" />
}
<div id="mainList">
 
    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
    {
        <div class="row">
            <div class="col-md-7 ">
                <h2>Security Analytics</h2>@ViewBag.Nav
            </div>

            <div class="col-md-5 col-right">
                <div class="pull-right">
                    <label class=" control-label">show rows:</label>
                    @Html.DropDownList("numberOfRows", (SelectList)ViewBag.RowsPerPage)
                    <input type="submit" value="Update" class="btn btn-primary btn-xs" />
                    @*@Html.DropDownList("numberOfRows", null, string.Empty, new { @class = "form-control" })*@
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 ">
                @Html.ActionLink("Create New", "Create")
            </div>
        </div>
     
    }
    @Html.Partial("_MsgSuccesFail", Model)
    <div class="code-cut">
        @Html.Grid(Model).Named("securityAnalyticsGrd").Columns(columns =>
    {
        columns.Add(c => c.Ticker)
               .Titled("Ticker").Filterable(true);
        columns.Add(c => c.Short_Name).Titled("Security Name ").Filterable(true) ; 
        //hides column, but use this in js:
        columns.Add(c => c.Security_ID, true);
        columns.Add(c => c.Entity_ID, true);

        columns.Add(c => c.Total_Return_ME_1YR).Titled("Total return Yr1").Filterable(false)
                .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0,0.00}</span>", x.Total_Return_ME_1YR)).Encoded(false)
                .Sanitized(false)
                .SetWidth(100);
        columns.Add(c => c.Total_Return_ME_2YR).Titled("Total return Yr2").Filterable(false)
                .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0,0.00}</span>", x.Total_Return_ME_2YR)).Encoded(false)
                .Sanitized(false)
                .SetWidth(100);
        columns.Add(c => c.Total_Return_ME_3YR).Titled("Total return Yr3").Filterable(false)
                .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0,0.00}</span>", x.Total_Return_ME_3YR)).Encoded(false)
                .Sanitized(false)
                .SetWidth(100);

        columns.Add(c => c.Earnings_Forecast_Yr1).Titled("Earnings f/c Yr1").Filterable(false)
                .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0,0.00}</span>", x.Earnings_Forecast_Yr1)).Encoded(false)
                .Sanitized(false)
                .SetWidth(100); 
        columns.Add(c => c.Earnings_Forecast_Yr2).Titled("Earnings f/c Yr2").Filterable(false)
                .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0,0.00}</span>", x.Earnings_Forecast_Yr2)).Encoded(false)
                .Sanitized(false)
                .SetWidth(100);

        columns.Add(c => c.Earnings_Forecast_Yr3).Titled("Earnings f/c Yr3").Filterable(false)
                .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0,0.00}</span>", x.Earnings_Forecast_Yr3)).Encoded(false)
                .Sanitized(false)
                .SetWidth(100);   
         
        columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .SetWidth(60)
                .RenderValueAs(c => @<u>
                    @Html.ActionLink("Edit", "Edit", "SecurityAnalytics", new { SecurityId = c.Security_ID, EntityId = c.Entity_ID, Nav = @ViewBag.Nav }, null)
                </u>);

        columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .SetWidth(80)
                .RenderValueAs(c => @<u>
                    @Html.ActionLink("Delete", "Delete", "SecurityAnalytics", new { SecurityId = c.Security_ID, EntityId = c.Entity_ID, Nav = @ViewBag.Nav }, null)
                </u>);

        columns.Add().Encoded(false).Sanitized(false)
                .RenderValueAs(c => @<a href="@Url.Action("SecurityAnalyticsHistory", "SecurityAnalytics", new { SecurityId = c.Security_ID, EntityId = c.Entity_ID })">
                <span class="badge">History</span>
            </a>); 
    }).WithPaging(Convert.ToInt16(ViewBag.RowsPgSelected) ).Sortable(true)
    </div> 

</div>
 @section Scripts { 
@Scripts.Render("~/bundles/GridMvc")
@Scripts.Render("~/bundles/datetime")
<script>
    $(function () {
        pageGrids.securityAnalyticsGrd.onRowSelect(function (e) {
            //here rather do full page load instead of the Ajax partial:
            // var myNav = "@ViewBag.Nav";
            if ("@ViewBag.Nav" != "")
                myUrl2 = mtpApp.Urls.baseUrl + "SecurityAnalytics/Edit?SecurityId=" + e.row.Security_ID + "&EntityId=" + e.row.Entity_ID + "&Nav=" + "@ViewBag.Nav";
            else
                myUrl2 = mtpApp.Urls.baseUrl + "SecurityAnalytics/Edit?SecurityId=" + e.row.Security_ID + "&EntityId=" + e.row.Entity_ID;

            window.location = myUrl2;
        });
        //not using this Ajax call anymore, rather server call to keep all consistent

    });
</script>

}
