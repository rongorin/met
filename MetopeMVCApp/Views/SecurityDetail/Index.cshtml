@model IEnumerable<MetopeMVCApp.Models.SecurityDetailIndexModel>
@*@model IEnumerable<MetopeMVCApp.Models.Security_Detail>*@ 
@using GridMvc.Html
@{
    ViewBag.Title = "GridSecurityDetail";
    
     //List<SelectListItem> numOfRows = new List<SelectListItem> {
    //                   new SelectListItem { Text = "10", Value = "10" },
     //                   new SelectListItem { Text = "20", Value = "20" },
    //                   new SelectListItem { Text = "50", Value = "50" }		
    //                   new SelectListItem { Text = "50", Value = "100" }		
     //                   }; 
    List<string> _sizes = new List<string>() { "10", "20", "50", "100" }; 
    //ViewBag.SkipValue = ((SelectList)ViewBag.DogNames).SelectedValue ?? Convert.ToInt16(numOfRows.Skip(1).First().Value); 
    
    ViewBag.RowsPgSelected = ((SelectList)ViewBag.RowsPerPage).SelectedValue ?? _sizes[1];
     
    //SelectListItem[] items = numOfRows.ToArray();
    //SelectListItem selectedItem = items.FirstOrDefault(i => i.Value == "1")
    //    ?? items[0]; 
}
@section Styles {
    @Styles.Render("~/Content/GridMvc")
    @Styles.Render("~/Content/datetime")
    <link href="~/Content/cssNoLines.css" rel="stylesheet" />
}
        
@helper Truncate(string input, int length)
{
    if (input.Length <= length)
        { @input}
    else { @input.Substring(0, length)<text>...</text>
    }
}

@{
    ViewBag.Title = "Index"; 
}
 @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
 { 
    <div class="row">
        <div class="col-md-7 "> 
                <h3>Securities Listing</h3>  
        </div>  

        <div class="col-md-5 col-right">
            <div class="pull-right"> 
                <label  class=" control-label">show rows:</label> 
                @Html.DropDownList("numberOfRows", (SelectList)ViewBag.RowsPerPage) 
                <input type="submit" value="Update" class="btn btn-primary btn-xs" />
                @*@Html.DropDownList("numberOfRows", null, string.Empty, new { @class = "form-control" })*@ 
            </div>
        </div> 
    </div>
     
    <div class="row">
        <div class="col-md-12 "> 
                @Html.ActionLink("Create New", "Create") 
        </div>
    </div>
}
@Html.Partial("_MsgSuccesFail", Model) 
  <div class="code-cut"> 
    @Html.Grid(Model).Columns(columns =>
    {

        columns.Add(c => c.Ticker)
            .Titled("Ticker").Filterable(true)
            .SetWidth(100); 
        columns.Add(c => c.Security_Name).Titled("Security name").Filterable(true);
              // columns.Add(c => c.Security_Type_Code ).Titled("Return").Encoded(false).Sanitized(false).RenderValueAs(c => @Html.ActionLink(" ", "../LendReturns/Create", new { id = c.NumberOfRows }, new { @class = "btn btn-success glyphicon glyphicon-share-alt" }));
        
            //.RenderValueAs(, new { @class = "btn btn-success glyphicon glyphicon-share-alt" }));  
        
        columns.Add(c => c.Current_Market_Price).Titled("Current Market Price").Filterable(false) 
                .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0,0.00}</span>", x.Current_Market_Price)).Encoded(false)
                .Sanitized(false)
                .SetWidth(140); 
        columns.Add()
                .Encoded(false) 
                .Sanitized(false)
                .SetWidth(60)
                .RenderValueAs(c => @<u>
                    @Html.ActionLink("Edit", "Edit", "SecurityDetail", new { id = c.Security_ID }, null)
                </u>); 
        columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .SetWidth(80)
                .RenderValueAs(c => @<u>
                    @Html.ActionLink("Delete", "Delete", "SecurityDetail", new { id = c.Security_ID }, null)
                </u>);
        
        columns.Add(c => c.Security_ID).Titled(" ").Encoded(false).Sanitized(false)
                .RenderValueAs(c => @<a href="@Url.Action("Index", "SecurityPrice", new { SecurityId = c.Security_ID })">
                                          <span class="badge">Price History</span>  
                                    </a>);
    }).WithPaging(Convert.ToInt16(ViewBag.RowsPgSelected)).Sortable(true)
  </div> 
@section Scripts { @Scripts.Render("~/bundles/datetime")
    @Scripts.Render("~/bundles/GridMvc") 

}
