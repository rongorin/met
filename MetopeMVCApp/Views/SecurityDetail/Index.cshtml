@model IEnumerable<MetopeMVCApp.Models.SecurityDetailIndexModel>
@*@model IEnumerable<MetopeMVCApp.Models.Security_Detail>*@ 
@using GridMvc.Html
@{
    ViewBag.Title = "GridSecurityDetail";
    
     //List<SelectListItem> numOfRows = new List<SelectListItem> {
     //                   new SelectListItem { Text = "5", Value = "10" },
     //                   new SelectListItem { Text = "20", Value = "20" },
    //                   new SelectListItem { Text = "50", Value = "50" }		
    //                   new SelectListItem { Text = "50", Value = "100" }		
     //                   }; 
    //ViewBag.SkipValue = ((SelectList)ViewBag.DogNames).SelectedValue ?? Convert.ToInt16(numOfRows.Skip(1).First().Value); 
    ViewBag.RowsPgSelected = ((SelectList)ViewBag.RowsPerPage).SelectedValue ?? 20; 
     
     
     //SelectListItem[] items = numOfRows.ToArray();
     //SelectListItem selectedItem = items.FirstOrDefault(i => i.Value == "1")
     //    ?? items[0]; 
    
}
@section Styles {
    @Styles.Render("~/Content/GridMvc")
}
        
@helper Truncate(string input, int length)
{
    if (input.Length <= length)
        { @input}
    else { @input.Substring(0, length)<text>...</text>
    }
}

@{
    ViewBag.Title = "Index";
}
 @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
{
<div class="row">
    <div class="col-md-7 "> 
            <h3>Securities Listing</h3> 
    </div>  
    <div class="col-md-5 col-right">
        <div class="pull-right">
             
            <label  class=" control-label">show rows:</label> 
            @Html.DropDownList("numberOfRows", (SelectList)ViewBag.RowsPerPage)
            <input type="submit" value="Update" class="btn btn-primary btn-xs" />
            @*@Html.DropDownList("numberOfRows", null, string.Empty, new { @class = "form-control" })*@

        </div>
    </div>
     
</div> 
 }
        @if (TempData["ResultMessage"] != null)
{
            <div class="alert alert-success alert-dismissable">
                <button class="close" data-dismiss="alert">&times;</button>
                @TempData["ResultMessage"]
            </div>
}
        @if (TempData["FailMsg"] != null)
{
            <div class="alert alert-danger alert-dismissable">
                <button class="close" data-dismiss="alert">&times;</button>
                @TempData["FailMsg"]
            </div>
}
        <div class="code-cut">

            @Html.Grid(Model).Columns(columns =>
    {
        columns.Add(c => c.Security_Name).Titled("Security name").Filterable(true);
        columns.Add(c => c.Ticker).Titled("Ticker").Filterable(true).SetWidth(110);
        columns.Add(c => c.Maturity_Date).Titled("Maturity Date").Filterable(false)
                        .Format("{0:dd MMM yyyy}")
                        .SetWidth(130);

        columns.Add(c => c.Security_Status)
            .Titled("Status").Filterable(true)
            .SetWidth(80);
        columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(20)
        .RenderValueAs(c => @<u>
            @Html.ActionLink("Edit", "Edit", "SecurityDetail", new { id = c.Security_ID }, null)
        </u>);

        columns.Add()
    .Encoded(false)
    .Sanitized(false)
    .SetWidth(20)
        .RenderValueAs(c => @<u>
        @Html.ActionLink("Details", "Details", "SecurityDetail", new { id = c.Security_ID }, null)
    </u>);
        columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(20)
        .RenderValueAs(c => @<u>
            @Html.ActionLink("Delete", "Delete", "SecurityDetail", new { id = c.Security_ID }, null)
        </u>);

    }).WithPaging(ViewBag.RowsPgSelected).Sortable(true)
        </div>

        <script type="text/javascript">

        </script>
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            @Scripts.Render("~/bundles/GridMvc")
        }
