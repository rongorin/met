
@model IPagedList<MetopeMVCApp.Models.SecurityDetailIndexModel>
@*@model IPagedList<MetopeMVCApp.Models.Security_Detail>*@
@helper Truncate(string input, int length)
{
    if (input.Length <= length)
    { @input}
    else
    { @input.Substring(0, length)<text>...</text>
    }
}
<div id="securitiesListing">
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table table-condensed table-striped"> 
        @if (!Model.Any())
        {
            <h3>Sorry!</h3>
            <p>Looks like no results for that search text</p>
        }
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Ticker)
            </th>
            <th width="30%">
                @Html.DisplayNameFor(model => model.FirstOrDefault().Security_Name)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Security_Type_Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Primary_Exch)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Current_Market_Price)
            </th>

        </tr>
   @foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Ticker)
        </td>
        <td width="30%">
            @Truncate(item.Security_Name, 40)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Security_Type_Code)

        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Primary_Exch)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Current_Market_Price)
        </td>

        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.Security_ID }) |
            @Html.ActionLink("Details", "Details", new { id = item.Security_ID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Security_ID }) |
            <a href="@Url.Action("HistoryUnderConstruction", "SecurityDetail", new { id = item.Security_ID })" class="icon">
                <span class="badge">Price history</span>
            </a>
        </td>
    </tr>
}
    </table>
    <div id="foot">
        @Html.PagedListPager(Model, page => Url.Action("Index",
            new { page }))
        @*,PagedListRenderOptions.MinimalWithItemCountText*@
    </div>





</div>
