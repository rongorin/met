@model IEnumerable<MetopeMVCApp.Models.SecurityPerformanceIndexViewModel>

@using GridMvc.Html
@{
    ViewBag.Title = "Security Performance";
    List<string> _sizes = new List<string>() { "10", "20", "50", "100" }; 
    ViewBag.RowsPgSelected = ((SelectList)ViewBag.RowsPerPage).SelectedValue ?? _sizes[1];
}
@section Styles {
    @Styles.Render("~/Content/GridMvc")
    @Styles.Render("~/Content/datetime")
    <link href="~/Content/cssNoLines.css" rel="stylesheet" />
    @*@Styles.Render("~/Content/datetime")*@
} 
<div id="mainList">
    @using (Html.BeginForm(null, null, new { SecurityId = ViewBag.SecurityID, PortfolioCode = ViewBag.Portfolio }, FormMethod.Post, new { @class = "form-horizontal", id = "TheForm" }))
    {
        <div class="row">
            <div class="col-md-8">
                <h3>Security Performance History 
                    @if (ViewBag.UserInputDate != null)
                    {

                        if (ViewBag.UserInputDate == DateTime.Now.Date.ToString("dd/MM/yyyy"))
                        {
                            @:  (for date  @ViewBag.LastRecordDate to Today)
                            }
                        else
                        {
                            @:  (for date @ViewBag.LastRecordDate to @ViewBag.UserInputdate)
                         }
                    }</h3>
                <h4>
                    for Portfolio <b>@ViewBag.PortfolioCode</b>
                    @if (ViewBag.PortfolioCode != null)
                    {
                        @: for Security <b>@ViewBag.Ticker</b>
                    }
                </h4>
            </div> 
            <div class="col-md-4 col-right">
                <div class="pull-right">
                    <label class=" control-label">show rows:</label>
                    @Html.DropDownList("numberOfRows", (SelectList)ViewBag.RowsPerPage,
                        new
                         {
                             onchange = "document.getElementById('TheForm').submit();"
                         })
                    @*<input type="submit" value="Update" class="btn btn-primary btn-xs" />*@ 
                </div>
            </div>
        </div>
        <div class="row">
             <div class="col-md-2 ">
                @Html.ActionLink("Create New", "Create", new { PortfolioCode = ViewBag.Portfolio, SecurityId = ViewBag.SecurityID }, null)
             </div>
            @Html.Partial("_UserSelectDate") 
            <div class="col-md-6"><h5>(note only the most recent <b>100</b> records are retrieved up to the selected date)</h5></div>

        </div>
    }
    @Html.Partial("_MsgSuccesFail", Model)

    <div class="code-cut">
        @Html.Grid(Model).Named("depGrid").Columns(columns =>
    {

        columns.Add(c => c.RecordDate).Titled("History Record Date").Filterable(true).SetWidth(180).Format("{0:dd MMM yyyy}");
        columns.Add(c => c.Ticker)
            .Titled("Ticker").Filterable(true)
            .SetWidth(90);
        columns.Add(c => c.Entity_ID, true);
        //columns.Add().Encoded(false).Sanitized(false).SetWidth(10).RenderValueAs(o => Html.CheckBox("checked", false));
        columns.Add(c => c.Security_ID, true);
        columns.Add(c => c.Portfolio_Code, true);

        columns.Add(c => c.ModDietz_Performance_Quarterly).Titled("ModDietz Perf Quarter").Css("text-right").Filterable(false)
            .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0,0.00}</span>", x.ModDietz_Performance_Quarterly)).Encoded(false)
            .Sanitized(false)
            .SetWidth(120);

        columns.Add(c => c.ModDietz_Performance_Monthly)
            .Titled("ModDietz Perf Month")
            .Css("text-right").Filterable(false)
            .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0,0.00}</span>", x.ModDietz_Performance_Monthly)).Encoded(false)
            .Sanitized(false)
            .SetWidth(120);

        columns.Add(c => c.ModDietz_Performance_MonthToDate)
            .Titled("ModDietz Perf Month to Date")
            .Css("text-right").Filterable(false)
            .RenderValueAs(x => String.Format("<span class=\"pull-right\">{0:0,0.00}</span>", x.ModDietz_Performance_MonthToDate)).Encoded(false)
            .Sanitized(false)
            .SetWidth(120);

        columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(50)
        .RenderValueAs(c => @<u>
            @Html.ActionLink("Edit", "Edit", "SecurityPerformanceHistory", new { SecurityId = c.Security_ID, PortfolioCode = c.Portfolio_Code, RecordDate = c.RecordDate }, null)
        </u>);
        columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(50)
        .RenderValueAs(c => @<u>
            @Html.ActionLink("Delete", "Delete", "SecurityPerformanceHistory", new { SecurityId = c.Security_ID, PortfolioCode = c.Portfolio_Code, RecordDate = c.RecordDate }, null)
        </u>); 
     }).WithPaging(Convert.ToInt16(ViewBag.RowsPgSelected)).Sortable(true)

    </div>
 </div>
    <br />
    <div>
        @*@Html.ActionLink("Back to List", "Index")*@
        @Html.ActionLink("Go Back", "Index", "SecurityPerformance", new { PortfolioCode = ViewBag.Portfolio, SecurityId = ViewBag.SecurityID }, null)
    </div>
    @section Scripts { @Scripts.Render("~/bundles/datetime")
    @Scripts.Render("~/bundles/GridMvc")
    <script>
        $(function () {
            pageGrids.depGrid.onRowSelect(function (e) {
                //here rather do full page load instead of the Ajax partial:
                // var myNav = "@ViewBag.Nav";
                myUrl2 = mtpApp.Urls.baseUrl + "SecurityPerformanceHistory/Edit?SecurityId=" + e.row.Security_ID + "&PortfolioCode=" + e.row.Portfolio_Code + "&EntityId=" + e.row.Entity_ID + "&RecordDate=" + e.row.RecordDate;

                window.location = myUrl2;
            });
        });
    </script>
    }



